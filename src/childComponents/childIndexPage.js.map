{"version":3,"file":"childIndexPage.js","sourceRoot":"","sources":["childIndexPage.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAC,IAAI,EAAE,UAAU,EAAiB,MAAM,KAAK,CAAC;AAErD,OAAO,EAAC,WAAW,EAAC,MAAM,yBAAyB,CAAC;AAEpD,OAAO,eAAe,CAAA;AACtB,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AAGxC,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAgB1C;QACI,KAAK,EAAE,CAAC;QAdc,iBAAY,GAAkB,EAAE,CAAC;QAevD,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAe,EAAE,EAAE;YACnC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAA;YACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAA;YAC3B,qEAAqE;QACzE,CAAC,CAAC,CAAA;IACN,CAAC;IAlBS,MAAM;QACZ,OAAO,IAAI,CAAC;;;;;kBAKF,IAAI,CAAC,WAAW,EAAE;;SAE3B,CAAA;IACL,CAAC;IAWO,WAAW;QACf,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,OAAO,IAAI,CAAC;sBACF,IAAI,CAAC,YAAY;;aAE1B,CAAC;SACL;QACD,OAAO,IAAI,CAAC;;;kBAGF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;YACjB,OAAO,IAAI,CAAC;0CACU,IAAI;iBAC7B,CAAA;QACT,CAAC,CAAC;;SAED,CAAC;IACN,CAAC;CACJ,CAAA;AA1Ce;IAAX,QAAQ,EAAE;gDAAwB;AACT;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oDAAkC;AAHlD,cAAc;IAD1B,aAAa,CAAC,kBAAkB,CAAC;GACrB,cAAc,CA4C1B;SA5CY,cAAc","sourcesContent":["import {customElement} from \"lit/decorators.js\";\r\nimport {html, LitElement, TemplateResult} from \"lit\";\r\nimport {ITasklist} from \"./childInterfaces\";\r\nimport {getTasklist} from \"../api/childApiRequests\";\r\nimport {apiResponse} from \"../sharedComponents/sharedInterfaces\";\r\nimport \"./taskElement\"\r\nimport {property} from \"lit/decorators\";\r\n\r\n@customElement(\"child-index-page\")\r\nexport class ChildIndexPage extends LitElement {\r\n\r\n    @property() tasklist!: ITasklist[];\r\n    @property({type: String}) errorMessage: string | null = \"\";\r\n\r\n    protected render(): TemplateResult {\r\n        return html `\r\n            <h1> Hello from Child Index Page! </h1>\r\n            <a href= \"/wishlist-overview\">Wishlist</a>\r\n\r\n            <div>\r\n                ${this.renderTasks()}\r\n            </div>\r\n        `\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        getTasklist().then((r : apiResponse) =>{\r\n            this.tasklist = r.results\r\n            this.errorMessage = r.error\r\n            //this.errorMessage = \"r.error\" //simulerer at der er en error besked\r\n        })\r\n    }\r\n\r\n    private renderTasks(){\r\n        if (this.errorMessage) {\r\n            return html `\r\n                <p> ${this.errorMessage} </p>\r\n                <p> Loading...</p>\r\n            `;\r\n        }\r\n        return html `\r\n            <h1>Opgaver:</h1>\r\n            <section class=\"container\">\r\n                ${this.tasklist.map(task => {\r\n                    console.log(task)\r\n                    return html `\r\n                    <task-element .task=${task}></task-element>\r\n                `\r\n        })}\r\n            </section>\r\n        `;\r\n    }\r\n}"]}